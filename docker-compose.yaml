services:
  backend-service:
    image: backend-service
    build:
      context: .
      dockerfile: Backend-Service/Dockerfile
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    ports:
      - "5001:8080"
  postgresDb:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db/PostgresData:/var/lib/postgresql/data


  mariadb:
    image: mariadb:11.3
    container_name: ai_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./db:/var/lib/mysql
      - ./mariadb-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"   # <-- port-mapping på plads

  ai-backend-service:
      container_name: ai_service_backend
      build:
        context: ./Backend-Service-Model-Trainer
        dockerfile: Dockerfile
      environment:
        AI_DATABASE_URL: ${AI_DATABASE_URL}
      depends_on:
        - mariadb
      volumes:
        - ./Backend-Service-Model-Trainer:/app
        - ./blob:/app/blob  # <-- tilføj denne linje
      ports:
        - "8000:8000"
      restart: always

volumes:
  mariadb_data_map: